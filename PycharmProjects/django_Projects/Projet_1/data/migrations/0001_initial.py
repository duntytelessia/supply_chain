# Generated by Django 3.2.5 on 2022-06-08 08:31

from django.conf import settings
import django.contrib.auth.models
import django.contrib.auth.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='CustomUser',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('validate', models.BooleanField(default=False)),
                ('codename', models.CharField(default='A', max_length=10)),
                ('funds', models.FloatField(default=0)),
                ('maxT', models.FloatField(default=1000)),
                ('numT', models.IntegerField(default=0)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='Goods',
            fields=[
                ('idG', models.CharField(max_length=200, primary_key=True, serialize=False)),
                ('nameG', models.CharField(max_length=200)),
                ('durG', models.PositiveIntegerField()),
            ],
            options={
                'verbose_name_plural': 'Goods',
            },
        ),
        migrations.CreateModel(
            name='Week',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('week', models.PositiveIntegerField()),
            ],
        ),
        migrations.CreateModel(
            name='Worker',
            fields=[
                ('id', models.CharField(default=0, max_length=200, primary_key=True, serialize=False)),
                ('eff', models.FloatField()),
                ('sal', models.FloatField()),
            ],
        ),
        migrations.CreateModel(
            name='Transaction',
            fields=[
                ('idT', models.CharField(max_length=200, primary_key=True, serialize=False)),
                ('quanT', models.FloatField(default=0)),
                ('priceT', models.FloatField(default=0)),
                ('verifiedT', models.BooleanField(default=False)),
                ('buyerT', models.ForeignKey(default=2, on_delete=django.db.models.deletion.CASCADE, related_name='tran_buyer', to=settings.AUTH_USER_MODEL)),
                ('dateT', models.ForeignKey(default=1, on_delete=django.db.models.deletion.CASCADE, to='data.week')),
                ('goods', models.ForeignKey(default=2, on_delete=django.db.models.deletion.CASCADE, to='data.goods')),
                ('sellerT', models.ForeignKey(default=2, on_delete=django.db.models.deletion.CASCADE, related_name='tran_seller', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Stock',
            fields=[
                ('idS', models.CharField(max_length=200, primary_key=True, serialize=False)),
                ('quanS', models.FloatField(default=0)),
                ('dateS', models.ForeignKey(default=1, on_delete=django.db.models.deletion.CASCADE, to='data.week')),
                ('goods', models.ForeignKey(default=2, on_delete=django.db.models.deletion.CASCADE, to='data.goods')),
                ('idU', models.ForeignKey(default=2, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Path',
            fields=[
                ('idP', models.CharField(max_length=200, primary_key=True, serialize=False)),
                ('priceP', models.FloatField(default=0)),
                ('chosenP', models.BooleanField(default=False)),
                ('buyerP', models.ForeignKey(default=2, on_delete=django.db.models.deletion.CASCADE, related_name='path_buyer', to=settings.AUTH_USER_MODEL)),
                ('logicP', models.ForeignKey(default=1, on_delete=django.db.models.deletion.CASCADE, related_name='path_logic', to=settings.AUTH_USER_MODEL)),
                ('sellerP', models.ForeignKey(default=2, on_delete=django.db.models.deletion.CASCADE, related_name='path_seller', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Order',
            fields=[
                ('idO', models.CharField(max_length=200, primary_key=True, serialize=False)),
                ('quanO', models.FloatField(default=0)),
                ('buyerO', models.ForeignKey(default=2, on_delete=django.db.models.deletion.CASCADE, related_name='order_buyer', to=settings.AUTH_USER_MODEL)),
                ('dateO', models.ForeignKey(default=1, on_delete=django.db.models.deletion.CASCADE, to='data.week')),
                ('goods', models.ForeignKey(default=2, on_delete=django.db.models.deletion.CASCADE, to='data.goods')),
                ('sellerO', models.ForeignKey(default=2, on_delete=django.db.models.deletion.CASCADE, related_name='order_seller', to=settings.AUTH_USER_MODEL)),
            ],
        ),
    ]
